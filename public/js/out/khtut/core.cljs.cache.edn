{:rename-macros {}, :renames {}, :externs {Math {PI {}, atan2 {}, sin {}, cos {}, pow {}, sqrt {}}, document {querySelector {}, getElementById {}, onkeyup {}}, Object {getScreenCTM {}, x {}, createSVGPoint {}, height {}, y {}, clearRect {}, matrixTransform {}, inverse {}, getContext {}, fill {}, width {}, ellipse {}, beginPath {}}, window {addEventListener {}, removeEventListener {}}}, :use-macros {}, :excludes #{}, :name khtut.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :cljs.spec/speced-vars [], :uses nil, :defs {handles {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 159, :column 7, :end-line 159, :end-column 14, :arglists (quote ([data]))}, :name khtut.core/handles, :variadic false, :file "src/khtut/core.cljs", :end-column 14, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 184, :column 7, :end-line 184, :end-column 17, :arglists (quote ([]))}, :name khtut.core/mount-root, :variadic false, :file "src/khtut/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, distance {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 91, :column 7, :end-line 91, :end-column 15, :arglists (quote ([x1 y1 x2 y2]))}, :name khtut.core/distance, :variadic false, :file "src/khtut/core.cljs", :end-column 15, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, nib-interaction {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 103, :column 7, :end-line 103, :end-column 22, :arglists (quote ([cursor]))}, :name khtut.core/nib-interaction, :variadic false, :file "src/khtut/core.cljs", :end-column 22, :method-params ([cursor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cursor]))}, atan2 {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 31, :column 7, :end-line 31, :end-column 12, :arglists (quote ([a b]))}, :name khtut.core/atan2, :variadic false, :file "src/khtut/core.cljs", :end-column 12, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, ui-state {:name khtut.core/ui-state, :file "src/khtut/core.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 18, :column 6, :end-line 18, :end-column 14}, :tag any}, bezier {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 40, :column 7, :end-line 40, :end-column 13, :arglists (quote ([t a b c d]))}, :name khtut.core/bezier, :variadic false, :file "src/khtut/core.cljs", :end-column 13, :method-params ([t a b c d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 5, :fn-var true, :arglists (quote ([t a b c d]))}, init! {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 202, :column 7, :end-line 202, :end-column 12, :arglists (quote ([]))}, :name khtut.core/init!, :variadic false, :file "src/khtut/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cos {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 33, :column 7, :end-line 33, :end-column 10, :arglists (quote ([x]))}, :name khtut.core/cos, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, drag-interaction {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 82, :column 7, :end-line 82, :end-column 23, :arglists (quote ([cursor evt-init]))}, :name khtut.core/drag-interaction, :variadic false, :file "src/khtut/core.cljs", :end-column 23, :method-params ([cursor evt-init]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor evt-init]))}, handle-fn {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 71, :column 7, :end-line 71, :end-column 16, :arglists (quote ([cursor f]))}, :name khtut.core/handle-fn, :variadic false, :file "src/khtut/core.cljs", :end-column 16, :method-params ([cursor f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor f]))}, pow {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 34, :column 7, :end-line 34, :end-column 10, :arglists (quote ([x a]))}, :name khtut.core/pow, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([x a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x a]))}, state {:name khtut.core/state, :file "src/khtut/core.cljs", :line 8, :column 1, :end-line 8, :end-column 11, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 8, :column 6, :end-line 8, :end-column 11}, :tag any}, toggle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 166, :column 7, :end-line 166, :end-column 13, :arglists (quote ([atm key]))}, :name khtut.core/toggle, :variadic false, :file "src/khtut/core.cljs", :end-column 13, :method-params ([atm key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 2, :fn-var true, :arglists (quote ([atm key]))}, tangent-handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 140, :column 7, :end-line 140, :end-column 21, :arglists (quote ([data]))}, :name khtut.core/tangent-handle, :variadic false, :file "src/khtut/core.cljs", :end-column 21, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, tangent-interaction {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 128, :column 7, :end-line 128, :end-column 26, :arglists (quote ([cursor]))}, :name khtut.core/tangent-interaction, :variadic false, :file "src/khtut/core.cljs", :end-column 26, :method-params ([cursor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cursor]))}, lerp {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([t a b]))}, :name khtut.core/lerp, :variadic false, :file "src/khtut/core.cljs", :end-column 11, :method-params ([t a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t a b]))}, nib-handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 115, :column 7, :end-line 115, :end-column 17, :arglists (quote ([data]))}, :name khtut.core/nib-handle, :variadic false, :file "src/khtut/core.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, drag-handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 96, :column 7, :end-line 96, :end-column 18, :arglists (quote ([c]))}, :name khtut.core/drag-handle, :variadic false, :file "src/khtut/core.cljs", :end-column 18, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, app {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 169, :column 7, :end-line 169, :end-column 10, :arglists (quote ([]))}, :name khtut.core/app, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, redraw-canvas {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 50, :column 7, :end-line 50, :end-column 20, :arglists (quote ([s]))}, :name khtut.core/redraw-canvas, :variadic false, :file "src/khtut/core.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, sin {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 32, :column 7, :end-line 32, :end-column 10, :arglists (quote ([x]))}, :name khtut.core/sin, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 153, :column 7, :end-line 153, :end-column 13, :arglists (quote ([data]))}, :name khtut.core/handle, :variadic false, :file "src/khtut/core.cljs", :end-column 13, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, client-to-page {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 24, :column 7, :end-line 24, :end-column 21, :arglists (quote ([event]))}, :name khtut.core/client-to-page, :variadic false, :file "src/khtut/core.cljs", :end-column 21, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :r :line.tangent :tangent-angle :y1 :width :circle.tangent :em :line.handle :angle :on-mouse-down :canvas :div :g :show-handles? :cx :class :cy :tangent-size :svg :div#drawing :h2 :x :x1 :circle.rotate :y2 :viewBox :show-centerlines? :p :x2 :circle.handle :height}, :order [:x :y :tangent-angle :tangent-size :angle :width :show-handles? :show-centerlines? :circle.handle :cx :cy :r :on-mouse-down :g :line.handle :x1 :y1 :x2 :y2 :circle.rotate :line.tangent :circle.tangent :div :h2 :p :em :div#drawing :canvas :height :svg :class :viewBox]}, :doc nil}