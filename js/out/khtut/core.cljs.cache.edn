{:rename-macros {}, :renames {}, :externs {Math {PI {}, atan2 {}, sin {}, cos {}, pow {}, floor {}, sqrt {}}, document {querySelector {}, getElementById {}, createElement {}, onkeyup {}}, Object {getScreenCTM {}, x {}, download {}, createSVGPoint {}, height {}, href {}, y {}, clearRect {}, matrixTransform {}, inverse {}, getContext {}, width {}, click {}}, tension2control {}, Vector {}, console {log {}}, Error {}, window {addEventListener {}, removeEventListener {}}}, :use-macros {}, :excludes #{}, :name khtut.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :cljs.spec/speced-vars [], :uses nil, :defs {handles {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 333, :column 7, :end-line 333, :end-column 14, :arglists (quote ([data]))}, :name khtut.core/handles, :variadic false, :file "src/khtut/core.cljs", :end-column 14, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 333, :end-line 333, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 366, :column 7, :end-line 366, :end-column 17, :arglists (quote ([]))}, :name khtut.core/mount-root, :variadic false, :file "src/khtut/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 366, :end-line 366, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, distance {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 213, :column 7, :end-line 213, :end-column 15, :arglists (quote ([x1 y1 x2 y2]))}, :name khtut.core/distance, :variadic false, :file "src/khtut/core.cljs", :end-column 15, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, rasterize-stroke {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 59, :column 7, :end-line 59, :end-column 23, :arglists (quote ([ctx s color]))}, :name khtut.core/rasterize-stroke, :variadic false, :file "src/khtut/core.cljs", :end-column 23, :method-params ([ctx s color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctx s color]))}, progress {:name khtut.core/progress, :file "src/khtut/core.cljs", :line 370, :column 1, :end-line 370, :end-column 14, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 370, :column 6, :end-line 370, :end-column 14}, :tag any}, nib-interaction {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 226, :column 7, :end-line 226, :end-column 22, :arglists (quote ([cursor]))}, :name khtut.core/nib-interaction, :variadic false, :file "src/khtut/core.cljs", :end-column 22, :method-params ([cursor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cursor]))}, atan2 {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 33, :column 7, :end-line 33, :end-column 12, :arglists (quote ([a b]))}, :name khtut.core/atan2, :variadic false, :file "src/khtut/core.cljs", :end-column 12, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, cross {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 187, :column 7, :end-line 187, :end-column 12, :arglists (quote ([x y class size attrs]))}, :name khtut.core/cross, :variadic false, :file "src/khtut/core.cljs", :end-column 12, :method-params ([x y class size attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x y class size attrs]))}, download-canvas {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 372, :column 7, :end-line 372, :end-column 22, :arglists (quote ([canvas filename]))}, :name khtut.core/download-canvas, :variadic false, :file "src/khtut/core.cljs", :end-column 22, :method-params ([canvas filename]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 372, :end-line 372, :max-fixed-arity 2, :fn-var true, :arglists (quote ([canvas filename]))}, ui-state {:name khtut.core/ui-state, :file "src/khtut/core.cljs", :line 20, :column 1, :end-line 20, :end-column 18, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 20, :column 10, :end-line 20, :end-column 18}, :tag any}, rasterize-segment {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 113, :column 7, :end-line 113, :end-column 24, :arglists (quote ([ctx q {x1 :x, y1 :y, angle1 :angle, width1 :width, tangle1 :tangent-angle, tsize1 :tangent-size} {x2 :x, y2 :y, angle2 :angle, width2 :width, tangle2 :tangent-angle, tsize2 :tangent-size}]))}, :name khtut.core/rasterize-segment, :variadic false, :file "src/khtut/core.cljs", :end-column 24, :method-params ([ctx q p__100219 p__100220]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ctx q {x1 :x, y1 :y, angle1 :angle, width1 :width, tangle1 :tangent-angle, tsize1 :tangent-size} {x2 :x, y2 :y, angle2 :angle, width2 :width, tangle2 :tangent-angle, tsize2 :tangent-size}]))}, bezier {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 42, :column 7, :end-line 42, :end-column 13, :arglists (quote ([t a b c d]))}, :name khtut.core/bezier, :variadic false, :file "src/khtut/core.cljs", :end-column 13, :method-params ([t a b c d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 5, :fn-var true, :arglists (quote ([t a b c d]))}, stroke-colors {:name khtut.core/stroke-colors, :file "src/khtut/core.cljs", :line 52, :column 1, :end-line 52, :end-column 19, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 52, :column 6, :end-line 52, :end-column 19}, :tag any}, init! {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 422, :column 7, :end-line 422, :end-column 12, :arglists (quote ([]))}, :name khtut.core/init!, :variadic false, :file "src/khtut/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 422, :end-line 422, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cos {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 35, :column 7, :end-line 35, :end-column 10, :arglists (quote ([x]))}, :name khtut.core/cos, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, drag-interaction {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 204, :column 7, :end-line 204, :end-column 23, :arglists (quote ([cursor evt-init]))}, :name khtut.core/drag-interaction, :variadic false, :file "src/khtut/core.cljs", :end-column 23, :method-params ([cursor evt-init]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor evt-init]))}, handle-fn {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 166, :column 7, :end-line 166, :end-column 16, :arglists (quote ([f] [cursor f])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([f] [cursor f]), :arglists ([f] [cursor f]), :arglists-meta (nil nil)}}, :name khtut.core/handle-fn, :variadic false, :file "src/khtut/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([f] [cursor f]), :arglists ([f] [cursor f]), :arglists-meta (nil nil)}, :method-params ([f] [cursor f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 2, :fn-var true, :arglists ([f] [cursor f])}, pow {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 36, :column 7, :end-line 36, :end-column 10, :arglists (quote ([x a]))}, :name khtut.core/pow, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([x a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x a]))}, box {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 196, :column 7, :end-line 196, :end-column 10, :arglists (quote ([x y class size attrs]))}, :name khtut.core/box, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([x y class size attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x y class size attrs]))}, rasterize-stroke-pct {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 130, :column 7, :end-line 130, :end-column 27, :arglists (quote ([ctx q s color]))}, :name khtut.core/rasterize-stroke-pct, :variadic false, :file "src/khtut/core.cljs", :end-column 27, :method-params ([ctx q s color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ctx q s color]))}, state {:name khtut.core/state, :file "src/khtut/core.cljs", :line 8, :column 1, :end-line 8, :end-column 15, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 8, :column 10, :end-line 8, :end-column 15}, :tag any}, toggle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 347, :column 7, :end-line 347, :end-column 13, :arglists (quote ([atm key]))}, :name khtut.core/toggle, :variadic false, :file "src/khtut/core.cljs", :end-column 13, :method-params ([atm key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 347, :end-line 347, :max-fixed-arity 2, :fn-var true, :arglists (quote ([atm key]))}, tangent-handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 268, :column 7, :end-line 268, :end-column 21, :arglists (quote ([data]))}, :name khtut.core/tangent-handle, :variadic false, :file "src/khtut/core.cljs", :end-column 21, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, tangent-interaction {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 254, :column 7, :end-line 254, :end-column 26, :arglists (quote ([cursor]))}, :name khtut.core/tangent-interaction, :variadic false, :file "src/khtut/core.cljs", :end-column 26, :method-params ([cursor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cursor]))}, lerp {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 38, :column 7, :end-line 38, :end-column 11, :arglists (quote ([t a b]))}, :name khtut.core/lerp, :variadic false, :file "src/khtut/core.cljs", :end-column 11, :method-params ([t a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t a b]))}, nib-handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 241, :column 7, :end-line 241, :end-column 17, :arglists (quote ([data]))}, :name khtut.core/nib-handle, :variadic false, :file "src/khtut/core.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, hobby-handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 290, :column 7, :end-line 290, :end-column 19, :arglists (quote ([data]))}, :name khtut.core/hobby-handle, :variadic false, :file "src/khtut/core.cljs", :end-column 19, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, download-animation {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 379, :column 7, :end-line 379, :end-column 25, :arglists (quote ([step]))}, :name khtut.core/download-animation, :variadic false, :file "src/khtut/core.cljs", :end-column 25, :method-params ([step]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 379, :end-line 379, :max-fixed-arity 1, :fn-var true, :arglists (quote ([step]))}, drag-handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 218, :column 7, :end-line 218, :end-column 18, :arglists (quote ([c]))}, :name khtut.core/drag-handle, :variadic false, :file "src/khtut/core.cljs", :end-column 18, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, app {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 350, :column 7, :end-line 350, :end-column 10, :arglists (quote ([]))}, :name khtut.core/app, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, redraw-canvas {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 143, :column 7, :end-line 143, :end-column 20, :arglists (quote ([strokes]))}, :name khtut.core/redraw-canvas, :variadic false, :file "src/khtut/core.cljs", :end-column 20, :method-params ([strokes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([strokes]))}, sin {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 34, :column 7, :end-line 34, :end-column 10, :arglists (quote ([x]))}, :name khtut.core/sin, :variadic false, :file "src/khtut/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, redraw-canvas-pct {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 151, :column 7, :end-line 151, :end-column 24, :arglists (quote ([strokes t]))}, :name khtut.core/redraw-canvas-pct, :variadic false, :file "src/khtut/core.cljs", :end-column 24, :method-params ([strokes t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 2, :fn-var true, :arglists (quote ([strokes t]))}, handle {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 325, :column 7, :end-line 325, :end-column 13, :arglists (quote ([data]))}, :name khtut.core/handle, :variadic false, :file "src/khtut/core.cljs", :end-column 13, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, hobby-interaction {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 281, :column 7, :end-line 281, :end-column 24, :arglists (quote ([cursor]))}, :name khtut.core/hobby-interaction, :variadic false, :file "src/khtut/core.cljs", :end-column 24, :method-params ([cursor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cursor]))}, client-to-page {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 26, :column 7, :end-line 26, :end-column 21, :arglists (quote ([event]))}, :name khtut.core/client-to-page, :variadic false, :file "src/khtut/core.cljs", :end-column 21, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, strokes {:protocol-inline nil, :meta {:file "/Users/nasser/Projects/khtut/src/khtut/core.cljs", :line 340, :column 7, :end-line 340, :end-column 14, :arglists (quote ([data]))}, :name khtut.core/strokes, :variadic false, :file "src/khtut/core.cljs", :end-column 14, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 340, :end-line 340, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}}, :cljs.spec/registry-ref [], :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :line.rotate :r :line.tangent :tangent-angle :tension-bottom :circle.drag :y1 :width :circle.tangent :em :line.hobby-line :angle :on-mouse-down :canvas :div :g :show-handles? :line :cx :class :cy :tangent-size :svg :div#drawing :handle :h2 :angle-control :x :x1 :circle.rotate :y2 :viewBox :tension-top :rect :show-centerlines? :p :x2 :height :hobby}, :order [:x :y :tangent-angle :tangent-size :angle :width :tension-top :tension-bottom :show-handles? :show-centerlines? :angle-control :g :line :class :x1 :y1 :x2 :y2 :rect :height :handle :on-mouse-down :line.rotate :circle.rotate :cx :cy :r :line.tangent :circle.tangent :hobby :line.hobby-line :circle.drag :div :h2 :p :em :div#drawing :canvas :svg :viewBox]}, :doc nil}